compile 

xcodebuild -workspace OpenEmu.xcworkspace -scheme "OpenEmu" -configuration Release

The compiled OpenEmu.app binary is located in the default DerivedData path, ~/Library/Developer/Xcode/DerivedData within a generated OpenEmu-... folder and then inside Build/Products/Release

To compile OpenEmu and the core plugins, change -scheme "OpenEmu" to
-scheme "Build All"


https://github.com/OpenEmu/OpenEmu/blob/cd6aff786447237a61d330fb928a91d1567dfb65/OpenEmu/OpenEmuHelperApp.m

https://stackoverflow.com/questions/41157874/use-legacy-swift-language-version-swift-version-is-required-to-be-configured


- (void)systemBindingsDidSetEvent:(OEHIDEvent *)event forBinding:(__kindof OEBindingDescription *)bindingDescription playerNumber:(NSUInteger)playerNumber
{
    [self _updateBindingForEvent:event withBlock:^{
        [self->_systemResponder systemBindingsDidSetEvent:event forBinding:bindingDescription playerNumber:playerNumber];
    }];
}

- (void)systemBindingsDidUnsetEvent:(OEHIDEvent *)event forBinding:(__kindof OEBindingDescription *)bindingDescription playerNumber:(NSUInteger)playerNumber
{
    [self _updateBindingForEvent:event withBlock:^{
        [self->_systemResponder systemBindingsDidUnsetEvent:event forBinding:bindingDescription playerNumber:playerNumber];
    }];
}


- get timestamp in milliseconds, convert to string
NSTimeInterval seconds = [NSDate timeIntervalSinceReferenceDate];
double timenumber = seconds*1000;

NSNumber *myDoubleNumber = [NSNumber numberWithDouble:timenumber];
NSString *timestring = [myDoubleNumber stringValue];

NSString *datastring = [NSString stringWithFormat:@"%zu", playerNumber];

NSString *outputString = [NSString stringWithFormat:@"%@: %@", timestring, datastring];
[timestring writeToFile:@"/dev/stdout" atomically:NO encoding:NSUTF8StringEncoding error:nil];


---
	NSTimeInterval seconds = [NSDate timeIntervalSinceReferenceDate];
    double timenumber = seconds*1000;

    NSNumber *myDoubleNumber = [NSNumber numberWithDouble:timenumber];
    NSString *timestring = [myDoubleNumber stringValue];

    NSString *datastring = [NSString stringWithFormat:@"%zu", [aKey player]];
    NSString *keystring = [NSString stringWithFormat:@"%zu", [aKey key]];

    NSString *outputString = [NSString stringWithFormat:@"%@: %@, %@", timestring, datastring, keystring];
    [timestring writeToFile:@"/dev/stdout" atomically:NO encoding:NSUTF8StringEncoding error:nil];
---


look for way to print timestamp and number

NSString *path = [NSHomeDirectory() stringByAppendingPathComponent:@"Desktop"]; //get tmp path
NSString *filePath = [path stringByAppendingPathComponent:@"OpenEmuControllerLog.txt"];

NSString *str = @"hello world";
NSError *error;
[str writeToFile:filePath atomically:YES encoding:NSUTF8StringEncoding error:&error];

NSString *str1 = [NSString stringWithContentsOfFile:filePath encoding:NSUTF8StringEncoding error:&error];
NSLog(@"%@", str1);

---


look into wrting to file with os_log_t?


DeSuMe speed: https://wiki.desmume.org/index.php?title=Faq

FRAME_SKIP_AGGRESSIVENESS = 2

use 1 core: https://forums.desmume.org/viewtopic.php?id=9537 

max smaples msaa: https://github.com/TASVideos/desmume/pull/205/files

speed up: https://github.com/TASVideos/desmume/blob/23f4dcc0094e9dcb77494593831b6aef9aaf3b5b/desmume/README.MAC

desmume/src/frontend/cocoa/ClientExecutionControl.cpp
desmume/src/frontend/cocoa/ClientExecutionControl.h
desmume/src/frontend/cocoa/cocoa_GPU.mm
desmume/src/frontend/cocoa/cocoa_core.mm
desmume/src/frontend/cocoa/cocoa_output.mm
desmume/src/frontend/cocoa/userinterface/EmuControllerDelegate.mm
desmume/src/frontend/cocoa/userinterface/preferencesWindowDelegate.mm

- use shared memory to get BCI output commands
    - loop that checks for shared mem for neural command
        - use cfrunlooptimer, attach to cfrunloop
            - https://stackoverflow.com/questions/16340537/why-is-my-cfrunlooptimer-not-firing
        
        - where will loop go? 
            - OpenEmu-SDK/OpenEmuSystem/OEHIDDeviceHandler.m ?
    - create an event based on the neural command
        - init based on OpenEmu-SDK/OpenEmuSystem/OEHIDEvent.m
    - dispatch event within loop:
        - [self dispatchEvent:[self eventWithHIDValue:aValue]];